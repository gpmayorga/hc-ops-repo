---
## For nginx:
## https://doc.owncloud.org/server/8.2/admin_manual/installation/source_installation.html#php-fpm-configuration-notes
##

## Owncloud 9 tasks: https://apps.owncloud.com/CONTENT/content-files/170560-calendarplus.zip
## github.com/owncloud/tasks/issues/296

# apt-get install apache2 mariadb-server libapache2-mod-php5
# apt-get install php5-gd php5-json php5-mysql php5-curl
# apt-get install php5-intl php5-mcrypt php5-imagick

## maybe?  curl libcurl3 https://www.howtoforge.com/running-owncloud-5.0-on-nginx-lemp-on-debian-wheezy

- name: ensure dependencies available through apt are installed
  apt: 
    pkg: "{{ item }}" 
    state: latest 
    update_cache: yes 
    cache_valid_time: 600
  with_items:
    - nginx
    - openssl
    - php5-curl
    - php5-fpm
    - php5-gd
    - php5-imagick
    - php5-intl
    - php5-json
    - php5-mcrypt
    - php5-mysql

- name: create self-signed key/certificate pair if required
  shell: >
          openssl req -newkey rsa:2048 -x509 -nodes
          -days 365 -subj "/CN={{ owncloud_hostname }}"
          -out {{ owncloud_ssl_cert_file }}
          -keyout {{ owncloud_ssl_key_file }} &&
          update-ca-certificates
          creates={{ owncloud_ssl_cert_file }}
  when: "{{ssl_key}}" not defined

- name: ensure that owncloud group exists
  group:
    name: owncloud
    state: present

- name: ensure that owncloud user exits
  user:
    name: owncloud
    group: owncloud
    home: /srv/owncloud
    createhome: no
    shell: /bin/bash
    state: present

- name: ensure owncloud database is present
  mysql_db:
    name: owncloud

- name: ensure owncloud database user is present
  mysql_user:
    name: owncloud
    host: "{{ item }}"
    password: "{{ owncloud_owncloud_mysql_password }}"
    priv: owncloud.*:ALL
  with_items:
    - "%"
    - localhost

# - name: ensure /var/cache/ansible directory exists
#   file:
#     path: /var/cache/ansible
#     owner: root
#     group: root
#     mode: 0755
#     state: directory

- name: download the owncloud install package
  get_url:
    url: "{{ owncloud_download_url }}"
    dest: /var/cache/ansible/owncloud.tar.bz2

- name: unarchive owncloud to /srv/owncloud
  command: tar xvjf /var/cache/ansible/owncloud.tar.bz2
           chdir=/srv
           creates=/srv/owncloud
  notify:
    - update /srv/owncloud/config/autoconfig.php from template
    - update /srv/owncloud/config/config.php from template
    - initialize database

- name: ensure /srv/owncloud is owned by owncloud user
  file:
    path: /srv/owncloud
    owner: owncloud
    group: owncloud
    recurse: yes

- name: copy .my.cnf file with owncloud password credentials
  template:
    src: srv/owncloud/.my.cnf
    dest: /srv/owncloud/.my.cnf
    owner: owncloud
    group: owncloud
    mode: 0600

- name: update /etc/php5/fpm/pool.d/owncloud.conf from template
  template:
    src: etc/php5/fpm/pool.d/owncloud.conf
    dest: /etc/php5/fpm/pool.d/owncloud.conf 
    owner: root
    group: root
    mode: 0644
  notify:
    - restart php5-fpm

- name: update /etc/nginx/sites-available/owncloud from template
  template:
    src: etc/nginx/sites-available/owncloud
    dest: /etc/nginx/sites-available/owncloud
    owner: root
    group: root
    mode: 0644
  notify:
    - restart nginx

- name: ensure /etc/nginx/sites-enabled/owncloud exists and links to ../sites-available/owncloud
  file:
    path: /etc/nginx/sites-enabled/owncloud
    src: ../sites-available/owncloud
    force: yes
    state: link
  notify:
    - restart nginx

- name: ensure that there is not a hostname collision with the nginx default host
  lineinfile:
    dest: /etc/nginx/sites-available/default
    regexp: '^(\s+)(server_name {{ owncloud_hostname }};.*)$'
    backrefs: yes
    line: '\1#\2'
    state: present
  notify:
    - restart nginx

- name: ensure owncloud services are started and enabled
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - nginx
    - php5-fpm

